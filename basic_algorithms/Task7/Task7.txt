Description:
The router implements the node class and a trie data structure to allow for multiple paths per
single section of the pathway (e.g. /about/me, /about/you, /about/they).


Time complexity: Time complexity will vary between due to the modular style of this algorithm
insert() --> O(n)
find() --> O(n)
add_handler() --> O(1)
lookup --> O(n) (depends upon the number of words split_path() returns
split_path() --> O(n)
Worst case scenario --> O(n)

 
Space complexity:
Becasue we are creating a single trie and saving new nodes as they are produced, our space complexity
remains linear O(n). New data structures are not being created depending upon the size of the input.
