Description: The router implements the node class and a trie data structure to allow for multiple paths 
per letter of the word (e.g. a-n-t, a-r-k, a-b-e)

Time complexity: Time complexity will vary between due to the modular style of this algorithm
suffixes() --> O(n*m)
insert() --> O(n)
find() --> O(n)
Worst case scenario --> O(n*m)

Space complexity: Becasue we are creating a single trie and saving new nodes as they are produced, 
our space complexity remains linear O(n). New data structures are not being created depending upon the size of the input.
